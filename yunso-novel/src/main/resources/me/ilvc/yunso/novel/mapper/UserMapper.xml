<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.ilvc.yunso.novel.dao.UserDao">
  <resultMap id="BaseResultMap" type="me.ilvc.yunso.novel.model.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_Activate" jdbcType="INTEGER" property="isActivate" />
    <result column="reg_ip" jdbcType="VARCHAR" property="regIp" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, username, password, email, is_Activate, reg_ip, reg_time, last_time, last_ip, 
    sex, city, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="me.ilvc.yunso.novel.model.User">
    insert into user (uid, username, password, 
      email, is_Activate, reg_ip, 
      reg_time, last_time, last_ip, 
      sex, city, phone)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{isActivate,jdbcType=INTEGER}, #{regIp,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP}, #{lastIp,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.ilvc.yunso.novel.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isActivate != null">
        is_Activate,
      </if>
      <if test="regIp != null">
        reg_ip,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isActivate != null">
        #{isActivate,jdbcType=INTEGER},
      </if>
      <if test="regIp != null">
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.ilvc.yunso.novel.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isActivate != null">
        is_Activate = #{isActivate,jdbcType=INTEGER},
      </if>
      <if test="regIp != null">
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.ilvc.yunso.novel.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_Activate = #{isActivate,jdbcType=INTEGER},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>