<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.ilvc.yunso.novel.dao.NOpInfoDao">
  <resultMap id="BaseResultMap" type="me.ilvc.yunso.novel.model.NOpInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="state" jdbcType="VARCHAR" property="state" />
    <id column="type" jdbcType="VARCHAR" property="type" />
    <result column="target_url" jdbcType="VARCHAR" property="targetUrl" />
    <result column="start_url" jdbcType="VARCHAR" property="startUrl" />
    <result column="chapternum" jdbcType="INTEGER" property="chapternum" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="ndesc" jdbcType="VARCHAR" property="ndesc" />
    <result column="ncount" jdbcType="INTEGER" property="ncount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, state, type, target_url, start_url, chapternum, add_time, status, ndesc, ncount
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from novel_nopinfo
    where id = #{id,jdbcType=INTEGER}
      and state = #{state,jdbcType=VARCHAR}
      and type = #{type,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from novel_nopinfo
    where id = #{id,jdbcType=INTEGER}
      and state = #{state,jdbcType=VARCHAR}
      and type = #{type,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSelective" parameterType="me.ilvc.yunso.novel.model.NOpInfo">
    insert into novel_nopinfo (id, state, type, 
      target_url, start_url, chapternum, 
      add_time, status, ndesc, 
      ncount)
    values (#{id,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{targetUrl,jdbcType=VARCHAR}, #{startUrl,jdbcType=VARCHAR}, #{chapternum,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{ndesc,jdbcType=VARCHAR}, 
      #{ncount,jdbcType=INTEGER})
  </insert>
  <insert id="insert" parameterType="me.ilvc.yunso.novel.model.NOpInfo">
    insert into novel_nopinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="targetUrl != null">
        target_url,
      </if>
      <if test="startUrl != null">
        start_url,
      </if>
      <if test="chapternum != null">
        chapternum,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ndesc != null">
        ndesc,
      </if>
      <if test="ncount != null">
        ncount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="targetUrl != null">
        #{targetUrl,jdbcType=VARCHAR},
      </if>
      <if test="startUrl != null">
        #{startUrl,jdbcType=VARCHAR},
      </if>
      <if test="chapternum != null">
        #{chapternum,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ndesc != null">
        #{ndesc,jdbcType=VARCHAR},
      </if>
      <if test="ncount != null">
        #{ncount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.ilvc.yunso.novel.model.NOpInfo">
    update novel_nopinfo
    <set>
      <if test="targetUrl != null">
        target_url = #{targetUrl,jdbcType=VARCHAR},
      </if>
      <if test="startUrl != null">
        start_url = #{startUrl,jdbcType=VARCHAR},
      </if>
      <if test="chapternum != null">
        chapternum = #{chapternum,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="ndesc != null">
        ndesc = #{ndesc,jdbcType=VARCHAR},
      </if>
      <if test="ncount != null">
        ncount = #{ncount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and state = #{state,jdbcType=VARCHAR}
      and type = #{type,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.ilvc.yunso.novel.model.NOpInfo">
    update novel_nopinfo
    set target_url = #{targetUrl,jdbcType=VARCHAR},
      start_url = #{startUrl,jdbcType=VARCHAR},
      chapternum = #{chapternum,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      ndesc = #{ndesc,jdbcType=VARCHAR},
      ncount = #{ncount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
      and state = #{state,jdbcType=VARCHAR}
      and type = #{type,jdbcType=VARCHAR}
  </update>

  <select id="findAll" resultMap="BaseResultMap">
    SELECT * from novel_nopinfo
  </select>
  
  <select id="findById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from novel_nopinfo
    where id = #{id,jdbcType=INTEGER}
  </select>

</mapper>