<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.ilvc.yunso.novel.dao.NovelCollectionDao">
  <resultMap id="BaseResultMap" type="me.ilvc.yunso.novel.model.NovelCollection">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="novel_id" jdbcType="INTEGER" property="novelId" />
    <result column="chapter_id" jdbcType="INTEGER" property="chapterId" />
    <result column="novelName" jdbcType="VARCHAR" property="novelname" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, novel_id, chapter_id, novelName, type, addTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from novel_collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from novel_collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="me.ilvc.yunso.novel.model.NovelCollection">
    insert into novel_collection (id, uid, novel_id, 
      chapter_id, novelName, type, 
      addTime)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{novelId,jdbcType=INTEGER}, 
      #{chapterId,jdbcType=INTEGER}, #{novelname,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{addtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="me.ilvc.yunso.novel.model.NovelCollection">
    insert into novel_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="novelId != null">
        novel_id,
      </if>
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="novelname != null">
        novelName,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="novelId != null">
        #{novelId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="novelname != null">
        #{novelname,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.ilvc.yunso.novel.model.NovelCollection">
    update novel_collection
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="novelId != null">
        novel_id = #{novelId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="novelname != null">
        novelName = #{novelname,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.ilvc.yunso.novel.model.NovelCollection">
    update novel_collection
    set uid = #{uid,jdbcType=INTEGER},
      novel_id = #{novelId,jdbcType=INTEGER},
      chapter_id = #{chapterId,jdbcType=INTEGER},
      novelName = #{novelname,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      addTime = #{addtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>